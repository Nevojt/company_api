name: Deploy API Public

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env:
          - { SSH_HOST: 'SSH_HOST_PABLIC_1', SSH_USER: 'SSH_USER_PABLIC_1', SSH_PASSWORD: 'SSH_PASSWORD_PABLIC_1', CONTAINER_PATH: '/home/pablic/api/.env' }
          - { SSH_HOST: 'SSH_HOST_PABLIC_2', SSH_USER: 'SSH_USER_PABLIC_2', SSH_PASSWORD: 'SSH_PASSWORD_PABLIC_2', CONTAINER_PATH: '/home/pablic/api/.env' }

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME_PUBLIC }}
        password: ${{ secrets.DOCKER_PASSWORD_PUBLIC }}

    - name: Build and push Docker image
      run: |
        docker build -t nevojt/public_api:${{ github.sha }} -t nevojt/public_api:latest .
        docker push nevojt/public_api:${{ github.sha }}
        docker push nevojt/public_api:latest

    - name: Deploy to Server
      env:
        SSH_PASSWORD: ${{ matrix.env.SSH_PASSWORD }}
        SSH_HOST: ${{ matrix.env.SSH_HOST }}
        SSH_USER: ${{ matrix.env.SSH_USER }}
      run: |
        sshpass -p $SSH_PASSWORD ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "
        docker pull nevojt/public_api:latest;
        
        docker stop public_api_1 || true;
        docker rm public_api_1 || true;
        docker stop public_api_2 || true;
        docker rm public_api_2 || true;
        docker stop public_api_3 || true;
        docker rm public_api_3 || true;
        docker stop public_api_4 || true;
        docker rm public_api_4 || true;
        
        docker run -d --name public_api_1 --env-file ${{ matrix.env.CONTAINER_PATH }} -p 8000:8000 --cpus='1' --memory='1024m' nevojt/public_api:latest;
        docker run -d --name public_api_2 --env-file ${{ matrix.env.CONTAINER_PATH }} -p 8001:8000 --cpus='1' --memory='1024m' nevojt/public_api:latest;
        docker run -d --name public_api_3 --env-file ${{ matrix.env.CONTAINER_PATH }} -p 8002:8000 --cpus='1' --memory='1024m' nevojt/public_api:latest;
        docker run -d --name public_api_4 --env-file ${{ matrix.env.CONTAINER_PATH }} -p 8003:8000 --cpus='1' --memory='1024m' nevojt/public_api:latest
        "
