<<<<<<< HEAD
server {
    listen 80;
    server_name _;

    location / {
        rewrite ^/(.*)$ /api/$1 last;
        }
        location /api {
                proxy_pass http://localhost:8000;
=======
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#

# Визначаємо upstream ззовні блоку server
upstream api_backend_public {
    server 38.242.209.126:8000;
    server 38.242.209.126:8001;
    server 38.242.209.126:8002;
    server 38.242.209.126:8003;

    server 38.242.208.227:8000;
    server 38.242.208.227:8001;
    server 38.242.208.227:8002;
    server 38.242.208.227:8003;
    keepalive 32;
}


server {

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;
    server_name www.sayorama.eu sayorama.eu; # managed by Certbot

#        location / {
#                   rewrite ^/(.*)$ /chat/$1 last;
#                   }

        location /chat {
		limit_req zone=api_zone burst=10 nodelay;
                proxy_pass http://localhost:3000;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-NginX-Proxy true;
                proxy_redirect off;
        }
        location / {
                return 301 /chat$request_uri;
        }

      # location /meet/static {
      #          alias /home/dmytro/video_chat/app/src/front-end/;
     #           proxy_pass https://localhost;
    #            proxy_set_header Host $host;
   #             proxy_set_header X-Real-IP $remote_addr;
  #              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
 #               proxy_set_header X-Forwarded-Proto $scheme;
#        }





	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/run/php/php7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockBets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}


#    listen [::]:443 ssl; # managed by Certbot
#    listen 443 ssl; # managed by Certbot
#    ssl_certificate /etc/letsencrypt/live/sayorama.eu/fullchain.pem; # managed by Certbot
#    ssl_certificate_key /etc/letsencrypt/live/sayorama.eu/privkey.pem; # managed by Certbot
#    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
#    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot







    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/sayorama.eu/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/sayorama.eu/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}
server {
    if ($host = sayorama.eu) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = www.sayorama.eu) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	listen 80 ;
	listen [::]:80 ;
    server_name www.sayorama.eu sayorama.eu;
    return 404; # managed by Certbot




}

server {

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;
    server_name relativelys.eu; # managed by Certbot

	location / {
		limit_conn addr 10;
	}

	location /api {
		limit_req zone=api_zone burst=10 nodelay;
		proxy_pass http://api_backend_public;
        #        proxy_pass http://localhost:8000;
>>>>>>> b76081a8ec4b9a820a3d0f1adef71c7e7cef6824
                proxy_http_version 1.1;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Upgrade $http_upgrade;
<<<<<<< HEAD
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $http_host;
                proxy_set_header X-NginX-Proxy true;
                proxy_redirect off;
        }
        location /ws/ {
=======
                proxy_set_header Connection "upgrade";
                #proxy_set_header Host $http_host;
                proxy_set_header X-NginX-Proxy true;
                proxy_redirect off;
	}
	location /ws/ {
		limit_req zone=api_zone burst=10 nodelay;
>>>>>>> b76081a8ec4b9a820a3d0f1adef71c7e7cef6824
                proxy_pass http://localhost:8800;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
<<<<<<< HEAD
                proxy_set_header Host $http_host;
=======
               # proxy_set_header Host $http_host;
>>>>>>> b76081a8ec4b9a820a3d0f1adef71c7e7cef6824

                # Таймаути
                proxy_read_timeout 600s;
                proxy_send_timeout 600s;
        }
<<<<<<< HEAD
        location /private/ {
=======
	location /private/ {
		limit_req zone=api_zone burst=10 nodelay;
>>>>>>> b76081a8ec4b9a820a3d0f1adef71c7e7cef6824
                proxy_pass http://localhost:8080;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
<<<<<<< HEAD
                proxy_set_header Host $http_host;
=======
               # proxy_set_header Host $http_host;
>>>>>>> b76081a8ec4b9a820a3d0f1adef71c7e7cef6824

                # Таймаути
                proxy_read_timeout 600s;
                proxy_send_timeout 600s;
        }
<<<<<<< HEAD
        location /notification {
=======
	location /notification {
		limit_req zone=api_zone burst=10 nodelay;
>>>>>>> b76081a8ec4b9a820a3d0f1adef71c7e7cef6824
                proxy_pass http://localhost:8008;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
<<<<<<< HEAD
                proxy_set_header Host $http_host;
=======
                #proxy_set_header Host $http_host;
>>>>>>> b76081a8ec4b9a820a3d0f1adef71c7e7cef6824

                # Таймаути
                proxy_read_timeout 600s;
                proxy_send_timeout 600s;
        }
<<<<<<< HEAD
        location /tattoo/app {
                proxy_pass http://localhost:8900;
=======

        location /meet {
		limit_req zone=api_zone burst=10 nodelay;
                proxy_pass http://localhost:7777;
>>>>>>> b76081a8ec4b9a820a3d0f1adef71c7e7cef6824
                proxy_http_version 1.1;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Upgrade $http_upgrade;
<<<<<<< HEAD
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $http_host;
=======
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
               # proxy_set_header Host $http_host;
>>>>>>> b76081a8ec4b9a820a3d0f1adef71c7e7cef6824
                proxy_set_header X-NginX-Proxy true;
                proxy_redirect off;
        }

<<<<<<< HEAD
=======
	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/run/php/php7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockBets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}


    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/relativelys.eu/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/relativelys.eu/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($host = relativelys.eu) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	listen 80 ;
	listen [::]:80 ;
    server_name relativelys.eu;
    return 404; # managed by Certbot


>>>>>>> b76081a8ec4b9a820a3d0f1adef71c7e7cef6824
}
